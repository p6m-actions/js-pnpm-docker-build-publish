name: "JavaScript PNPM Docker Build and Publish"
description: "Builds and publishes Docker images for JS applications built with PNPM"
author: "Jimmie Fulton <jimmie.fulton@gmail.com>"

# Define the inputs for this action
inputs:
  platforms:
    description: "The platforms to build for (comma-separated)"
    required: false
    default: "linux/amd64,linux/arm64"
  affected-apps:
    description: "The affected applications to build Docker images for (space-separated)"
    required: true
  version:
    description: "The version tag to use for the Docker images"
    required: false
    default: "schedule"
  github-token:
    description: "GitHub token for authentication"
    required: true
  update-manifest-token:
    description: "Token used to update image manifests"
    required: true
  platform-dispatch-url:
    description: "URL to dispatch platform updates to"
    required: true
  registry:
    description: "Docker registry URL"
    required: true

# Define the outputs for this action
outputs:
  image-digests:
    description: "The digests of the built Docker images"
    value: ${{ steps.build-image.outputs.image-digests }}

# Define the runs configuration
runs:
  using: "composite"
  steps:
    - name: Build and push docker images
      id: build-image
      shell: bash
      run: |
        echo "Building and pushing Docker images for affected apps: ${{ inputs.affected-apps }}"

        IMAGE_DIGESTS=""
        for APP in ${{ inputs.affected-apps }}
        do
          # Use the specified version
          VERSION="${{ inputs.version }}" pnpm nx deploy $APP
          
          echo "------------------------------"
          echo "Trigger Update Image Digest..."
          
          # Get the image digest from NX cache
          DIGEST=$(cat ./node_modules/.cache/nx-container/$APP/digest || echo "")
          
          if [ -n "$DIGEST" ]; then
            # Append to the list of digests
            IMAGE_DIGESTS+="$APP:$DIGEST;"
            
            # Trigger manifest update
            curl -X POST \
              -H "Accept: application/vnd.github.everest-preview+json" \
              -H "Authorization: token ${{ inputs.update-manifest-token }}" \
              ${{ inputs.platform-dispatch-url }} \
              --fail-with-body \
              -d "{\"event_type\": \"update-digest\", \"client_payload\": {\"repository\": \"${GITHUB_REPOSITORY}\", \"directory_name\": \"fe-$APP\", \"resource_directory_name\": \"$(basename ${GITHUB_REPOSITORY})/apps/$APP\", \"image_name\": \"fe-$APP\", \"environment_dir\": \"dev\", \"digest\": \"$DIGEST\"}}"
          else
            echo "Warning: No digest found for $APP"
          fi
          
          # Clean up NX container cache
          rm -rf .nx-container
        done

        # Set output for use by other steps or jobs
        echo "image-digests=${IMAGE_DIGESTS}" >> $GITHUB_OUTPUT

# Define the branding for the action in the GitHub Marketplace
branding:
  icon: "package"
  color: "blue"
